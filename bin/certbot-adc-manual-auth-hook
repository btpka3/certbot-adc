#!/usr/bin/env python
# -*- coding: utf8 -*-

import os
import sys
import logging
from certbot_adc import CadcProviders

logging.basicConfig(
    format='%(asctime)s:%(levelname)s:%(name)s:%(message)s',
    # filename='/tmp/example.log',
    stream=sys.stdout,
    level=logging.DEBUG
)
logger = logging.getLogger("certbot_adc.certbot-adc-manual-auth-hook")


def get_cadc_conf_file():
    configs = [
        os.environ.get("CERTBOT-ADC_YAML"),
        os.getcwd() + os.sep + "certbot_adc.yaml",
        os.getcwd() + os.sep + "config/certbot_adc.yaml",
        os.path.expanduser("~") + os.sep + "/.certbot_cadc/certbot_adc.yaml",
        "/etc/certbot_adc/certbot_adc.yaml"
    ]
    config = None
    for config_file in configs:
        if config_file and os.path.isfile(config_file):
            config = config_file
            break

    assert config, """
    Could not find certbot_adc.yaml in  
    1. Environment variable 'CERTBOT-ADC_YAML'
    2. $WORKING_DIR/certbot_adc.yaml
    3. $WORKING_DIR/config/certbot_adc.yaml
    4. ~/.certbot_cadc/certbot_adc.yaml
    5. /etc/certbot_cadc/certbot_adc.yaml
    """
    logger.info("Using config file '" + config + "'")
    return config


domain = os.environ.get('CERTBOT_DOMAIN')
assert domain, "Environment variable 'CERTBOT_DOMAIN' is not set."

token = os.environ.get('CERTBOT_VALIDATION')
assert token, "Environment variable 'CERTBOT_VALIDATION' is not set."
logger.info("Setup DNS challenge for '" + domain + "' with token '" + token + "'")

config = get_cadc_conf_file()
fac = CadcProviders.CadcProviders(config)
fac.update_dns01(domain, token)

u"""
1. 解析并检查配置文件
2. 调用相应的API "_acme-challenge.test13"
import logging
logging.basicConfig(
    format='%(asctime)s - [%(levelname)-7s] - %(name)s : %(message)s',
    #filename='/tmp/example.log',
    level=logging.DEBUG
)
logging.debug('This message should go to the log file')
logging.warning('Watch out!')  # will print a message to the console
logging.info('I told you so')  #

logger = logging.getLogger(__name__)
logger.info("hi~~~~")
"""
